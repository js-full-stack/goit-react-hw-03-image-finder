{"version":3,"sources":["Components/ImageGallery/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","Components/Searchbar/Searchbar.jsx","services/pixabay-api.js","Components/ButtonLoadMore/ButtonLoadMore.jsx","App.js","index.js"],"names":["ImageGalleryItem","alt","id","webformatURL","largeImageURL","onClick","className","src","data-img","ImageGallery","this","props","images","onSwitchModal","map","tags","Component","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","onClose","handleBackdropClick","target","currentTarget","window","addEventListener","removeEventListener","createPortal","children","Searchbar","state","query","handleChange","e","setState","value","handleSubmit","preventDefault","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","searchQuery","currentPage","axios","defaults","baseURL","apiKey","url","get","then","res","data","hits","ButtonLoadMore","loadMore","App","isLoading","showModal","selectedImage","error","onChangeQuery","fetchImages","pixabayApi","prev","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","toggleModal","showLargeImage","selectImg","dataset","img","prevProps","prevState","showSpinnerWhileLoading","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9204d8de.chunk.js","sourcesContent":["import './ImageGallery.scss';\n\nconst ImageGalleryItem = ({\n  alt,\n  id,\n  webformatURL,\n  largeImageURL,\n  onClick,\n}) => {\n  return (\n    <li onClick={onClick} key={id} className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        data-img={largeImageURL}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from './ImageGalleryItem';\n// import Searchbar from '../Searchbar';\n// import Loader from 'react-loader-spinner';\n// import Modal from '../Modal';\nimport { Component } from 'react';\n// import pixabayApi from '../../services/pixabay-api';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// import ButtonLoadMore from '../ButtonLoadMore/';\n\nclass ImageGallery extends Component {\n  // state = {\n  //   images: [],\n  //   currentPage: 1,\n  //   searchQuery: '',\n  //   isLoading: false,\n  //   showModal: false,\n  //   selectedImage: '',\n  //   error: null,\n  // };\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.searchQuery !== this.state.searchQuery) {\n  //     this.fetchImages();\n  //   }\n  // }\n\n  // onChangeQuery = query => {\n  //   this.setState({\n  //     searchQuery: query,\n  //     currentPage: 1,\n  //     images: [],\n  //     error: null,\n  //   });\n  // };\n\n  // fetchImages = () => {\n  //   const { searchQuery, currentPage } = this.state;\n  //   this.setState({ isLoading: true });\n  //   pixabayApi\n  //     .fetchImages(searchQuery, currentPage)\n  //     .then(hits =>\n  //       this.setState(prev => ({\n  //         images: [...prev.images, ...hits],\n  //         currentPage: prev.currentPage + 1,\n  //       })),\n  //     )\n  //     .catch(error => this.setState({ error }))\n  //     .finally(() =>\n  //       this.setState({\n  //         isLoading: false,\n  //       }),\n  //     );\n  // };\n\n  // toggleModal = () => {\n  //   this.setState(prev => ({\n  //     showModal: !prev.showModal,\n  //   }));\n  // };\n\n  // showLargeImage = e => {\n  //   const selectImg = e.target.dataset.img;\n  //   this.toggleModal();\n  //   selectImg &&\n  //     this.setState({\n  //       selectImage: selectImg,\n  //     });\n  // };\n\n  render() {\n    const { images, onSwitchModal } = this.props;\n\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {images.map(({ tags, id, webformatURL, largeImageURL }) => {\n            return (\n              <ImageGalleryItem\n                onClick={onSwitchModal}\n                webformatURL={webformatURL}\n                largeImageURL={largeImageURL}\n                alt={tags}\n                key={id}\n                // showModal={showModal}\n              />\n            );\n          })}\n\n          {/* {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <img src={this.state.selectImage} alt=\"\" />\n            </Modal>\n          )} */}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import './Modal.scss';\nimport { Component } from 'react';\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return createPortal(\n      <div onClick={this.handleBackdropClick} className=\"Overlay\">\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import './Searchbar.scss';\nimport { Component } from 'react';\n\nclass Searchbar extends Component {\n  state = { query: '' };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            onChange={this.handleChange}\n            value={query}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Load more</span>\n          </button>\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import axios from 'axios';\n\nexport const fetchImages = (searchQuery = '', currentPage = 1) => {\n  axios.defaults.baseURL = 'https://pixabay.com/api';\n\n  const apiKey = '20244739-961dea85be28be305e8bcd893';\n  const url = `?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`;\n\n  return axios.get(url).then(res => res.data.hits);\n};\n\nexport default { fetchImages };\n","import './ButtonLoadMore.scss';\n\nconst ButtonLoadMore = ({ loadMore }) => {\n  return (\n    <button className=\"ButtonLoadMore\" onClick={loadMore}>\n      Load more\n    </button>\n  );\n};\n\nexport default ButtonLoadMore;\n","import ImageGallery from './Components/ImageGallery/ImageGallery';\nimport Modal from './Components/Modal';\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport Searchbar from './Components/Searchbar';\nimport pixabayApi from './services/pixabay-api';\nimport ButtonLoadMore from './Components/ButtonLoadMore';\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    showModal: false,\n    selectedImage: '',\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = query => {\n    if (query !== this.state.searchQuery)\n      this.setState({\n        searchQuery: query,\n        currentPage: 1,\n        images: [],\n        error: null,\n      });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, currentPage } = this.state;\n    this.setState({ isLoading: true });\n\n    pixabayApi\n      .fetchImages(searchQuery, currentPage)\n      .then(hits => {\n        this.setState(prev => ({\n          images: [...prev.images, ...hits],\n          currentPage: prev.currentPage + 1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  toggleModal = () => {\n    this.setState(prev => ({\n      showModal: !prev.showModal,\n    }));\n  };\n\n  showLargeImage = e => {\n    const selectImg = e.target.dataset.img;\n\n    this.toggleModal();\n\n    selectImg &&\n      this.setState({\n        selectedImage: selectImg,\n      });\n  };\n\n  render() {\n    const { images, showModal, error, isLoading, selectedImage } = this.state;\n    const showSpinnerWhileLoading = images.length > 0 && !isLoading;\n\n    return (\n      <>\n        {error && <h1>Ошибка, что-то пошло не так!</h1>}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        {images.length > 0 && (\n          <ImageGallery images={images} onSwitchModal={this.showLargeImage} />\n        )}\n\n        {isLoading && <Loader />}\n\n        {showSpinnerWhileLoading && (\n          <ButtonLoadMore loadMore={this.fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={selectedImage} alt=\"\" />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './basic.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}